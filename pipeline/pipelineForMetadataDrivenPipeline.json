{
	"name": "pipelineForMetadataDrivenPipeline",
	"properties": {
		"activities": [
			{
				"name": "LookupForConfigDetails",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSqlTableForConfigDetails",
						"type": "DatasetReference",
						"parameters": {
							"schemaName": {
								"value": "@pipeline().parameters.schemaName",
								"type": "Expression"
							},
							"tableName": {
								"value": "@pipeline().parameters.tableName",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LookupForConfigDetails",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LookupForConfigDetails').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "If ConditionToCheckForTypeOfLoad",
							"type": "IfCondition",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(item().load_type,'full_load')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "LookupForwatermarkvalue",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT TableName, WatermarkValue\nFROM watermarktable\nWHERE TableName = '@{item().table_name}'",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AzureSqlTable",
												"type": "DatasetReference"
											},
											"firstRowOnly": false
										}
									},
									{
										"name": "LookupForMax",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT MAX(@{item().watermarkvalue}) AS LatestWatermark\nFROM @{item().table_name};",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"dataset": {
												"referenceName": "AzureSqlTable",
												"type": "DatasetReference"
											}
										}
									},
									{
										"name": "Copy data1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "LookupForwatermarkvalue",
												"dependencyConditions": [
													"Succeeded"
												]
											},
											{
												"activity": "LookupForMax",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT * \nFROM @{item().table_name}\nWHERE @{item().watermarkvalue} > '@{activity('LookupForwatermarkvalue').output.value[variables('currentindex')].WatermarkValue}' \n  AND @{item().watermarkvalue} <= '@{activity('LookupForMax').output.firstRow.LatestWatermark}'\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "AzureSqlTable",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"folder": {
														"value": "@item().target_path",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Stored procedureForUpdateWatermarktable",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Copy data1",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[update_watermark_table]",
											"storedProcedureParameters": {
												"LastModifiedtime": {
													"value": {
														"value": "@activity('LookupForMax').output.firstRow.LatestWatermark",
														"type": "Expression"
													},
													"type": "Datetime"
												},
												"Tablename": {
													"value": {
														"value": "@item().table_name",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSqlDatabase1",
											"type": "LinkedServiceReference"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "CopyForFullLoad",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "select * from @{item().table_name}",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "ParquetSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "ParquetWriteSettings"
												}
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "AzureSqlTable",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "generic_adls_parquet_ds",
												"type": "DatasetReference",
												"parameters": {
													"container": "bronze",
													"folder": {
														"value": "@item().target_path",
														"type": "Expression"
													},
													"file_name": {
														"value": "@item().table_name",
														"type": "Expression"
													}
												}
											}
										]
									}
								]
							}
						}
					]
				}
			}
		],
		"parameters": {
			"schemaName": {
				"type": "string"
			},
			"tableName": {
				"type": "string"
			}
		},
		"variables": {
			"currentindex": {
				"type": "Integer"
			}
		},
		"annotations": [],
		"lastPublishTime": "2024-11-28T06:21:06Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}